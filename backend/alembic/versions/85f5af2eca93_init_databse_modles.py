"""Init databse modles

Revision ID: 85f5af2eca93
Revises: 
Create Date: 2024-09-15 13:23:02.913117

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '85f5af2eca93'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artist',
    sa.Column('artist_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('followers', sa.Integer(), nullable=False),
    sa.Column('popularity', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('artist_id'),
    sa.UniqueConstraint('artist_id')
    )
    op.create_table('genre',
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name'),
    sa.UniqueConstraint('name')
    )
    op.create_table('playlist',
    sa.Column('playlist_id', sa.Uuid(), nullable=False),
    sa.Column('spotify_playlist_id', sa.String(), nullable=False),
    sa.Column('current_snapshot_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('playlist_id'),
    sa.UniqueConstraint('playlist_id'),
    sa.UniqueConstraint('spotify_playlist_id')
    )
    op.create_table('track',
    sa.Column('track_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('release_date', sa.Date(), nullable=False),
    sa.Column('explicit', sa.Boolean(), nullable=False),
    sa.Column('popularity', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.PrimaryKeyConstraint('track_id'),
    sa.UniqueConstraint('track_id')
    )
    op.create_table('artist_genre_association',
    sa.Column('artist_id', sa.String(), nullable=True),
    sa.Column('genre_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.artist_id'], ),
    sa.ForeignKeyConstraint(['genre_id'], ['genre.name'], )
    )
    op.create_table('artist_track_association',
    sa.Column('artist_id', sa.String(), nullable=True),
    sa.Column('track_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['artist_id'], ['artist.artist_id'], ),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], )
    )
    op.create_table('playlist_version',
    sa.Column('version_id', sa.Uuid(), nullable=False),
    sa.Column('playlist_id', sa.Uuid(), nullable=False),
    sa.Column('snapshot_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('owner_name', sa.String(), nullable=False),
    sa.Column('owner_spotify_id', sa.String(), nullable=False),
    sa.Column('followers', sa.Integer(), nullable=False),
    sa.Column('tracks_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['playlist_id'], ['playlist.playlist_id'], ),
    sa.PrimaryKeyConstraint('version_id'),
    sa.UniqueConstraint('snapshot_id'),
    sa.UniqueConstraint('version_id')
    )
    op.create_table('track_features',
    sa.Column('track_id', sa.String(), nullable=False),
    sa.Column('dance_ability', sa.Float(), nullable=True),
    sa.Column('energy', sa.Float(), nullable=True),
    sa.Column('key', sa.Integer(), nullable=True),
    sa.Column('loudness', sa.Float(), nullable=True),
    sa.Column('mode', sa.Integer(), nullable=True),
    sa.Column('speechiness', sa.Float(), nullable=True),
    sa.Column('acousticness', sa.Float(), nullable=True),
    sa.Column('instrumentalness', sa.Float(), nullable=True),
    sa.Column('liveness', sa.Float(), nullable=True),
    sa.Column('valence', sa.Float(), nullable=True),
    sa.Column('tempo', sa.Float(), nullable=True),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('time_signature', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], ),
    sa.PrimaryKeyConstraint('track_id'),
    sa.UniqueConstraint('track_id')
    )
    op.create_table('analysis',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('playlist_version_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'STARTED', 'SUCCESS', 'FAILED', 'REVOKED', name='analysisstatus'), nullable=False),
    sa.Column('task_id', sa.String(), nullable=True),
    sa.Column('uniqueness', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', now())"), nullable=False),
    sa.ForeignKeyConstraint(['playlist_version_id'], ['playlist_version.version_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('playlist_track_association',
    sa.Column('playlist_version_id', sa.UUID(), nullable=True),
    sa.Column('track_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['playlist_version_id'], ['playlist_version.version_id'], ),
    sa.ForeignKeyConstraint(['track_id'], ['track.track_id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('playlist_track_association')
    op.drop_table('analysis')
    op.drop_table('track_features')
    op.drop_table('playlist_version')
    op.drop_table('artist_track_association')
    op.drop_table('artist_genre_association')
    op.drop_table('track')
    op.drop_table('playlist')
    op.drop_table('genre')
    op.drop_table('artist')
    # ### end Alembic commands ###
